{"version":3,"sources":["components/UI/Modal/ModalSelectedWatch.js","components/EnteredWatch/EnteredWatch.js","components/UI/Tooltiptext/Tooltiptext.js","components/SelectedWatch/SelectedWatch.js","components/UI/Modal/ModalTotalAmount.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["ModalSelectedWatch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showModal","react_default","a","createElement","Fragment","className","style","transform","opacity","watch","watchName","src","watchUrl","alt","key","watchDescription","onClick","closing","Component","EnteredWatch","detailsHandler","setState","closingHandler","enteredWatch","watchPrice","UI_Modal_ModalSelectedWatch","selected","tooltiptext","active","SelectedWatch","selectedWatch","selectedWatchQuantity","Tooltiptext_Tooltiptext","selectedWatchName","selectedWatchPrice","selectedWatchUrl","numeration","onClickDecrement","onClickIncrement","ModalTotalAmount","isImageUrl","require","App","validate","errors","isError","length","watchNameError","watchDescriptionError","watchUrlError","enteredWatchList","concat","watchPriceError","objectSpread","submitHandler","event","preventDefault","watchAmount","watchId","Math","floor","random","watchQuantity","add","selectedWatchDescription","selectedWatchAmount","selectedWatchId","arr","selectedWatchList","some","el","buyWatchHandler","increaseAmountHandler","indexOfObject","updatedWatchListObject","updatedWatchList","splice","activeIndex","totalAmount","reduce","accumulator","decreaseAmountHandler","summaryHandler","isButtonDisabled","_this2","enteredWatches","map","index","components_EnteredWatch_EnteredWatch","startQuantity","bind","selectedWatches","components_SelectedWatch_SelectedWatch","type","placeholder","required","value","onChange","target","min","UI_Modal_ModalTotalAmount","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fd98d903.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './ModalSelectedWatch.css';\r\n\r\nclass ModalSelectedWatch extends Component {\r\n\r\n\tconstructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n\trender() {\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"ModalSelectedWatch\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: this.props.showModal ? 'translateY(0)' : 'translateY(-100vh)',\r\n\t\t\t\t\t\topacity: this.props.showModal ? '1':'0'\r\n\t\t\t\t\t}}>\r\n\t                <p>{this.props.watch.watchName}</p>\r\n                    <img src={this.props.watch.watchUrl} alt ={this.props.key} />\r\n                    <p>{this.props.watch.watchDescription}</p>\r\n\r\n                    <button onClick={this.props.closing} className=\"btnClose\">X</button>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}                                                   \r\n                                                               \r\nexport default ModalSelectedWatch;","import React, { Component } from 'react';\r\nimport Modal from '.././UI/Modal/ModalSelectedWatch';\r\n\r\nclass EnteredWatch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    /*Shows the modal*/\r\n\r\n    detailsHandler = () => {\r\n        this.setState({\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n    /*Closes the modal*/\r\n\r\n    closingHandler = () => {\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"product\">\r\n                <img src={this.props.enteredWatch.watchUrl} alt={this.props.enteredWatch.watchName}/>\r\n                <p>{this.props.enteredWatch.watchName}</p>\r\n                <p>${this.props.enteredWatch.watchPrice}</p>\r\n                <button \r\n                    className=\"details-button\"\r\n                    onClick={this.detailsHandler}\r\n                >\r\n                Details\r\n                </button>\r\n                <Modal showModal={this.state.showModal} watch={this.props.enteredWatch} closing={this.closingHandler}/>\r\n                <button className=\"buy-button\" onClick={this.props.selected}>Buy</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EnteredWatch;\r\n","import React from 'react';\r\nimport './Tooltiptext.css';\r\n\r\nconst tooltiptext = (props) => {\r\n    return (\r\n        <div className=\"TooltiptextContainer\">\r\n            <span \r\n                className={\"Tooltiptext\" + (props.tooltiptext && props.active ?\r\n                ' visible' : '')}>You have reached a ordering limit of 10 pieces per watch\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default tooltiptext;","import React from 'react';\r\nimport Tooltiptext from '.././UI/Tooltiptext/Tooltiptext';\r\nimport './SelectedWatch.css';\r\n\r\nconst SelectedWatch = (props) => {\r\n    return (\r\n        \r\n        <div className={\"shopping-cart-product\" + (props.selectedWatch.selectedWatchQuantity < 1 ? ' notDisplayed' : '')}>\r\n            <Tooltiptext tooltiptext={props.tooltiptext} active={props.active} /> \r\n            <div className=\"product-info\">\r\n                <div>\r\n                    <h3>{props.selectedWatch.selectedWatchName}</h3>\r\n                    <p>${props.selectedWatch.selectedWatchPrice} &times; {props.selectedWatch.selectedWatchQuantity}</p>\r\n                </div>\r\n                <img src={props.selectedWatch.selectedWatchUrl} alt={props.numeration} />\r\n            </div>\r\n            <div className=\"product-count\">\r\n                <button onClick={props.onClickDecrement}>-</button>\r\n                    <span>{props.selectedWatch.selectedWatchQuantity}</span>\r\n                <button onClick={props.onClickIncrement}>+</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectedWatch;\r\n","import React, {Component} from 'react';\r\nimport './ModalTotalAmount.css';\r\n\r\nclass ModalTotalAmount extends Component {\r\n\r\n\tconstructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"Modal\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: this.props.showModal ? 'translateY(0)' : 'translateY(-100vh)',\r\n\t\t\t\t\t\topacity: this.props.showModal ? '1':'0'\r\n\t\t\t\t\t}}>\r\n\t                <p>Your purchase was successful!</p>\r\n                    <button onClick={this.props.closing} className=\"btnClose\">X</button>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}                                                   \r\n                                                               \r\nexport default ModalTotalAmount;","import React, { Component } from 'react';\r\nimport EnteredWatch from '.././components/EnteredWatch/EnteredWatch';\r\nimport SelectedWatch from '.././components/SelectedWatch/SelectedWatch';\r\nimport Modal from '.././components/UI/Modal/ModalTotalAmount';\r\nimport './App.css';\r\nimport 'normalize.css';\r\nconst isImageUrl = require('is-image-url');\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isError : true, \r\n            errors: [], \r\n            watchName: '',\r\n            watchNameError: '', \r\n            watchDescription: '',\r\n            watchDescriptionError: '',\r\n            watchUrl: '',\r\n            watchUrlError: '',\r\n            watchPrice: '',\r\n            watchPriceError: '',\r\n            isButtonDisabled: false, \r\n            watchId: '',\r\n            watchAmount: '',\r\n            watchQuantity: 1, \r\n            enteredWatchList: [],\r\n            selectedWatchList: [],\r\n            activeIndex: '',\r\n            tooltiptext: false, \r\n            totalAmount: 0,\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n        validate = () => {\r\n  \r\n        let errors = [];    \r\n        let isError = false;\r\n        let watchUrl = this.state.watchUrl;\r\n\r\n        if(this.state.watchName.length === 0) {\r\n            errors.watchNameError = 'Pls. enter a product name';\r\n            isError = true;\r\n        } else {\r\n            errors.watchNameError = '';\r\n            this.setState({\r\n                watchName: ''\r\n            })\r\n        }\r\n\r\n        if(this.state.watchDescription.length === 0) {\r\n            errors.watchDescriptionError = 'Pls. enter a watch description';\r\n            isError = true;\r\n        } else {\r\n            errors.watchDescriptionError = '';\r\n            this.setState({\r\n                watchDescription: ''\r\n            })\r\n        }\r\n\r\n        if(this.state.watchUrl.length === 0) {\r\n            errors.watchUrlError = 'Pls. enter an url';\r\n            isError = true;\r\n        } else if(isImageUrl(this.state.watchUrl) === false){\r\n            errors.watchUrlError = 'Pls. enter a valid url';\r\n            isError = true;\r\n        } else {\r\n            this.setState({\r\n                enteredWatchList: this.state.enteredWatchList.concat({watchUrl}),\r\n                watchUrl: ''\r\n            })\r\n            errors.watchUrlError = '';\r\n        }\r\n\r\n        if(this.state.watchPrice.length === 0) {\r\n            errors.watchPriceError = 'Pls. enter a watch price';\r\n            isError = true;\r\n        } else {\r\n            errors.watchPriceError = '';\r\n            this.setState({\r\n                watchPrice: ''\r\n            })\r\n        }\r\n            errors.concat(this.state.watchUrlError);\r\n            this.setState({\r\n                ...errors\r\n            })  \r\n\r\n        return isError;\r\n    }\r\n\r\n    /*Submit the form on button press and fills the array enteredWatchList with objects*/\r\n\r\n    submitHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n        const err = this.validate();\r\n\r\n        if(err === false) {\r\n            let watchName = this.state.watchName;\r\n            let watchDescription = this.state.watchDescription;\r\n            let watchUrl = this.state.watchUrl;\r\n            let watchPrice = this.state.watchPrice;\r\n            let watchQuantity = 1;\r\n            let watchAmount = watchPrice * watchQuantity;\r\n            let watchId = Math.floor((Math.random() * 100) + 1);\r\n\r\n            this.setState({\r\n                enteredWatchList: this.state.enteredWatchList.concat({watchName, watchUrl, watchDescription, watchPrice, watchQuantity, watchAmount, watchId})\r\n            })          \r\n        } \r\n    }\r\n\r\n    /*Checks if selectedWatchName is already entered in selectedWatchList and compares with element from enteredWatchList, if not exists, adds it and other realted\r\n    fileds to selectedWatchList*/\r\n     \r\n    add = (selectedWatchName, selectedWatchUrl, selectedWatchDescription, selectedWatchPrice, selectedWatchQuantity, selectedWatchAmount, selectedWatchId) => {\r\n        \r\n        let arr = this.state.selectedWatchList;\r\n\r\n        let found = arr.some(el => {\r\n            return el.selectedWatchName === selectedWatchName;\r\n        });\r\n\r\n        if (!found) { \r\n            let selectedWatchAmount = selectedWatchPrice * selectedWatchQuantity;\r\n            return arr.concat({selectedWatchName, selectedWatchUrl, selectedWatchDescription, selectedWatchPrice, selectedWatchQuantity, selectedWatchAmount, selectedWatchId});\r\n        } else {\r\n            return this.state.selectedWatchList;\r\n        }\r\n    }\r\n\r\n    /*Adds the entered data about watch in array of objects selectedWatchList, by previously calling add function*/\r\n\r\n    buyWatchHandler = (selectedWatchName, selectedWatchUrl, selectedWatchDescription, selectedWatchPrice, selectedWatchQuantity, selectedWatchAmount, selectedWatchId) => {\r\n\r\n        let arr = this.add(selectedWatchName, selectedWatchUrl, selectedWatchDescription, selectedWatchPrice, selectedWatchQuantity, selectedWatchAmount, selectedWatchId);\r\n        \r\n        this.setState({\r\n            selectedWatchList: arr\r\n        });\r\n    }\r\n\r\n    /*Incerases the quantity per watch wim max.of 10, with the activation of tooltiptext above 10*/\r\n\r\n    increaseAmountHandler = (watchId, indexOfObject, watchQuantity, watchAmount) => {\r\n\r\n        if(watchQuantity < 1) {\r\n            let updatedWatchListObject = this.state.selectedWatchList[indexOfObject];\r\n            updatedWatchListObject.selectedWatchQuantity = 0;\r\n            updatedWatchListObject.selectedWatchAmount = 0;\r\n            let updatedWatchList = this.state.selectedWatchList;\r\n            updatedWatchList.splice(indexOfObject, 1, updatedWatchListObject);\r\n            \r\n            this.setState({\r\n                activeIndex: indexOfObject,\r\n                tooltiptext: false, \r\n                selectedWatchList: updatedWatchList\r\n            });\r\n            return;\r\n\r\n        } else if (watchQuantity >= 10){\r\n            let updatedWatchListObject = this.state.selectedWatchList[indexOfObject];\r\n            updatedWatchListObject.selectedWatchQuantity = 10;\r\n            updatedWatchListObject.selectedWatchAmount = this.state.selectedWatchList[indexOfObject].selectedWatchPrice * this.state.selectedWatchList[indexOfObject].selectedWatchQuantity;\r\n            let updatedWatchList = this.state.selectedWatchList;\r\n            updatedWatchList.splice(indexOfObject, 1, updatedWatchListObject);\r\n\r\n            this.setState({\r\n                activeIndex: indexOfObject,\r\n                tooltiptext: true,\r\n                selectedWatchList: updatedWatchList\r\n            });\r\n            return;\r\n        }\r\n\r\n        let updatedWatchListObject = this.state.selectedWatchList[indexOfObject];\r\n        updatedWatchListObject.selectedWatchQuantity = this.state.selectedWatchList[indexOfObject].selectedWatchQuantity + 1;\r\n        updatedWatchListObject.selectedWatchAmount = this.state.selectedWatchList[indexOfObject].selectedWatchPrice * this.state.selectedWatchList[indexOfObject].selectedWatchQuantity;\r\n        let updatedWatchList = this.state.selectedWatchList;\r\n        updatedWatchList.splice(indexOfObject, 1, updatedWatchListObject);\r\n\r\n        this.setState({\r\n            activeIndex: indexOfObject,\r\n            selectedWatchList: updatedWatchList\r\n        })\r\n        let totalAmount = this.state.selectedWatchList.reduce((accumulator, el) => {\r\n            return accumulator + el.selectedWatchAmount;\r\n        },0);\r\n\r\n        this.setState({\r\n            activeIndex: indexOfObject,\r\n            tooltiptext: false,\r\n            totalAmount : totalAmount,\r\n        })\r\n    }\r\n\r\n    /*Decreases the quantity per watch with min.of a, when 0 item disappears from list of selected watches*/\r\n\r\n    decreaseAmountHandler = (watchId, indexOfObject, watchQuantity, watchAmount) => {\r\n\r\n        if(watchQuantity < 1) {\r\n            let updatedWatchListObject = this.state.selectedWatchList[indexOfObject];\r\n            updatedWatchListObject.selectedWatchQuantity = 0;\r\n            updatedWatchListObject.selectedWatchAmount = 0;\r\n            let updatedWatchList = this.state.selectedWatchList;\r\n            updatedWatchList.splice(indexOfObject, 1, updatedWatchListObject);\r\n            \r\n            this.setState({\r\n                activeIndex: indexOfObject,\r\n                selectedWatchList: updatedWatchList\r\n            });\r\n            let totalAmount = this.state.selectedWatchList.reduce((accumulator, el) => {\r\n            return accumulator + el.selectedWatchAmount;},0);\r\n\r\n            this.setState({\r\n                activeIndex: indexOfObject,\r\n                tooltiptext: true,\r\n                totalAmount : totalAmount\r\n            })\r\n            return;\r\n\r\n        } else if (watchQuantity >= 10){\r\n            let updatedWatchListObject = this.state.selectedWatchList[indexOfObject];\r\n            updatedWatchListObject.selectedWatchQuantity = 9;\r\n            updatedWatchListObject.selectedWatchAmount = this.state.selectedWatchList[indexOfObject].selectedWatchPrice * this.state.selectedWatchList[indexOfObject].selectedWatchQuantity;\r\n            let updatedWatchList = this.state.selectedWatchList;\r\n            updatedWatchList.splice(indexOfObject, 1, updatedWatchListObject);\r\n\r\n            this.setState({\r\n                activeIndex: indexOfObject,\r\n                selectedWatchList: updatedWatchList,\r\n                tooltiptext: false\r\n            });\r\n            let totalAmount = this.state.selectedWatchList.reduce((accumulator, el) => {\r\n                return accumulator + el.selectedWatchAmount;\r\n            },0);\r\n\r\n            this.setState({\r\n                activeIndex: indexOfObject,\r\n                tooltiptext: false, \r\n                totalAmount : totalAmount\r\n            })\r\n            return;\r\n        }\r\n\r\n        let updatedWatchListObject = this.state.selectedWatchList[indexOfObject];\r\n        updatedWatchListObject.selectedWatchQuantity = this.state.selectedWatchList[indexOfObject].selectedWatchQuantity - 1;\r\n        updatedWatchListObject.selectedWatchAmount = this.state.selectedWatchList[indexOfObject].selectedWatchPrice * this.state.selectedWatchList[indexOfObject].selectedWatchQuantity;\r\n        let updatedWatchList = this.state.selectedWatchList;\r\n        updatedWatchList.splice(indexOfObject, 1, updatedWatchListObject);\r\n\r\n        this.setState({\r\n            selectedWatchList: updatedWatchList,\r\n            activeIndex: indexOfObject\r\n        })\r\n\r\n        let totalAmount = this.state.selectedWatchList.reduce((accumulator, el) => {\r\n            return accumulator + el.selectedWatchAmount;\r\n        },0);\r\n\r\n        this.setState({\r\n            activeIndex: indexOfObject,\r\n            totalAmount : totalAmount\r\n        })\r\n    }\r\n\r\n    /*Sums up the total quantity of watches*/\r\n\r\n    summaryHandler = () => {\r\n\r\n        if(this.state.totalAmount > 0) {\r\n            this.setState({\r\n                showModal: true\r\n            })\r\n        }\r\n    }\r\n\r\n    /*Closes the modal*/\r\n    \r\n    closingHandler = () => {\r\n        \r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const enteredWatches = this.state.enteredWatchList.map((enteredWatch, index) => {          \r\n            let startQuantity = 1;\r\n            return <EnteredWatch\r\n                key={index}\r\n                startQuantity={startQuantity}\r\n                enteredWatch={enteredWatch}\r\n                selected={this.buyWatchHandler.bind(this, enteredWatch.watchName, enteredWatch.watchUrl,\r\n                    enteredWatch.watchDescription, enteredWatch.watchPrice, startQuantity, enteredWatch.watchId)}\r\n                />\r\n        });\r\n\r\n        const selectedWatches = this.state.selectedWatchList.map((selectedWatch, index) => {\r\n            const active = this.state.activeIndex;\r\n            const tooltiptext = this.state.tooltiptext;\r\n            return <SelectedWatch\r\n                key={index}\r\n                active={index === active} \r\n                tooltiptext={tooltiptext}\r\n                numeration={index}\r\n                selectedWatch={selectedWatch}\r\n                onClickIncrement={() => {this.increaseAmountHandler(selectedWatch.selectedWatchId, index, selectedWatch.selectedWatchQuantity, selectedWatch.selectedWatchPrice);}} \r\n                onClickDecrement={() => {this.decreaseAmountHandler(selectedWatch.selectedWatchId, index, selectedWatch.selectedWatchQuantity, selectedWatch.selectedWatchPrice);}}  \r\n            />\r\n        });\r\n\r\n        return (\r\n            <div className=\"App\">\r\n            \t<div className=\"container-fluid\">\r\n                    <div className=\"container\">\r\n                        <div className=\"add-product\">\r\n                           <form>\r\n                                <div>\r\n                                    <label>Product name:</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        placeholder=\"Casio Watch\" \r\n                                        required\r\n                                        value={this.state.watchName}\r\n                                        onChange={event => this.setState({watchName: event.target.value})}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* Notification WatchNameError */}\r\n                                <div className=\"WatchNameError\">\r\n                                    <span \r\n                                        className={\"tooltiptext\" + (this.state.watchNameError === \"Pls. enter a product name\" ?\r\n                                         ' visible' : '')}>{this.state.watchNameError}</span>\r\n                                </div>\r\n                             \r\n                                <div>\r\n                                    <label>Product description:</label>\r\n                                    <textarea \r\n                                        placeholder=\"Sample description...\"\r\n                                        value={this.state.watchDescription}\r\n                                        onChange={event => this.setState({watchDescription: event.target.value})}\r\n                                    >\r\n                                    </textarea>\r\n                                </div>\r\n\r\n                                {/* Notification WatchDescriptionError */}\r\n                                <div className=\"WatchDescriptionError\">\r\n                                    <span \r\n                                        className={\"tooltiptext\" + (this.state.watchDescriptionError === \"Pls. enter a watch description\" ?\r\n                                         ' visible' : '')}>{this.state.watchDescriptionError}</span>\r\n                                </div>\r\n                             \r\n                                <div>\r\n                                    <label>Product image:</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        placeholder=\"http://...jpg\"\r\n                                        required\r\n                                        value={this.state.watchUrl}\r\n                                        onChange={event => this.setState({watchUrl: event.target.value})}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* Notification WatchUrlError */}\r\n                                <div className=\"WatchUrlError\">\r\n                                    <span \r\n                                        className={\"tooltiptext\" + (this.state.watchUrlError === \"Pls. enter an url\" || this.state.watchUrlError === \"Pls. enter a valid url\" ?\r\n                                         ' visible' : '')}>{this.state.watchUrlError}</span>\r\n                                </div>\r\n                             \r\n                                <div>\r\n                                    <label>Product price:</label>\r\n                                    <input \r\n                                        type=\"number\" \r\n                                        min=\"0\" \r\n                                        placeholder=\"33\" \r\n                                        required\r\n                                        value={this.state.watchPrice}\r\n                                        onChange={event => this.setState({watchPrice: event.target.value})}\r\n                                    />\r\n                                </div>\r\n\r\n                                 {/* Notification WatchPriceError */}\r\n                                <div className=\"WatchPriceError\">\r\n                                    <span \r\n                                        className={\"tooltiptext\" + (this.state.watchPriceError === \"Pls. enter a watch price\" ?\r\n                                         ' visible' : '')}>{this.state.watchPriceError}</span>\r\n                                </div>\r\n                             \r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={event => this.submitHandler(event)}\r\n                                >\r\n                                    Add a new Task\r\n                                </button>\r\n                            </form>\r\n                         </div>\r\n                         \r\n                         <div className=\"list-products\">\r\n                            {enteredWatches}\r\n                        </div>\r\n                         \r\n                        <div className=\"shopping-cart\">\r\n                            <div className=\"shopping-cart-products\">\r\n                                {selectedWatches}\r\n                            </div>\r\n                            <div className=\"shopping-cart-summary\">\r\n                                <div>Total: <b>${this.state.totalAmount}</b></div>\r\n                                <div><button onClick={this.summaryHandler}>Purchase</button></div>\r\n                                <Modal showModal={this.state.showModal} watch={this.props.enteredWatch} closing={this.closingHandler}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n//import * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}